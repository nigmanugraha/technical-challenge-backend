services:
  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      - mongodb
      - rabbitmq
    env_file:
      - ./user-service/.env-cloud
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.test-api.rule=Host(`test-api.nigmanugraha.my.id`)"
      - "traefik.http.routers.test-api.entrypoints=websecure"
      - "traefik.http.routers.test-api.tls.certresolver=myresolver"
      - "traefik.http.services.test-api.loadbalancer.server.port=5000"
    networks:
      - traefik_default

  chat-service:
    build: ./chat-service
    container_name: chat-service
    depends_on:
      - mongodb
      - rabbitmq
    env_file:
      - ./chat-service/.env-cloud
    networks:
      - traefik_default

  mongodb:
    image: mongo:6
    container_name: mongo
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    networks:
      - traefik_default

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    networks:
      - traefik_default

networks:
  traefik_default:
    external: true

volumes:
  mongo_data:
